import React, { useEffect, useRef, useState } from "react";
import { motion, useInView, useAnimation, easeOut } from "framer-motion";
import { useNavigate } from "react-router-dom";

import SearchBox from "../components/SearchBox";
import PopularProducts from "../components/PopularProducts";
import ProductRecommendations from "../components/ProductRecommendations";
import { useAuth } from "../context/AuthContext";
import eventApi from "../API/eventApi";
import { getAllBaiViet } from "../API/baibaoApi";
import type { BaiViet } from "../types/BaiViet";

const TrangChu: React.FC = () => {
  const { user } = useAuth();
  const navigate = useNavigate();

  // State cho banner s·ª± ki·ªán
  const [activeEvents, setActiveEvents] = useState<any[]>([]);
  const [eventLoading, setEventLoading] = useState(true);
  const [eventError, setEventError] = useState<string | null>(null);

  // State cho b√†i vi·∫øt
  const [articles, setArticles] = useState<BaiViet[]>([]);
  const [articlesLoading, setArticlesLoading] = useState(true);

  // Debug log ƒë·ªÉ ki·ªÉm tra user
  useEffect(() => {
    console.log("TrangChu - Current user:", user);
  }, [user]);

  // Fetch active events
  useEffect(() => {
    const fetchActiveEvents = async () => {
      setEventLoading(true);
      setEventError(null);
      try {
        const events = await eventApi.fetchEvents();
        if (Array.isArray(events) && events.length > 0) {
          const now = new Date();
          const validEvents = events.filter((event: any) => {
            try {
              const endDate = new Date(event.ngay_ket_thuc);
              const isNotExpired = endDate > now;
              const isVisible = Boolean(event.hien_thi) && event.hien_thi !== 0;

              console.log(`üîç Event "${event.tieu_de || event.ten_su_kien}":`, {
                endDate: endDate.toISOString(),
                isNotExpired,
                isVisible,
                hien_thi: event.hien_thi,
                passed: isNotExpired && isVisible,
              });

              return isNotExpired && isVisible;
            } catch (err) {
              setEventError("c√≥ l·ªói trong qu√° tr√¨nh x·ª≠ l√Ω t·∫£i s·ª± ki·ªán");
              return false;
            }
          });

          // Ch·ªâ l·∫•y 2 s·ª± ki·ªán hot nh·∫•t cho trang ch·ªß
          setActiveEvents(validEvents.slice(0, 2));
        } else {
          setActiveEvents([]);
        }
      } catch (err: any) {
        setActiveEvents([]);
      } finally {
        setEventLoading(false);
      }
    };
    fetchActiveEvents();
  }, []);

  // Fetch articles
  useEffect(() => {
    const fetchArticles = async () => {
      setArticlesLoading(true);
      try {
        console.log("üîÑ Fetching articles...");
        const articlesData = await getAllBaiViet();
        console.log("üì∞ Articles loaded:", articlesData);

        // L·∫•y 6 b√†i vi·∫øt m·ªõi nh·∫•t ƒë·ªÉ hi·ªÉn th·ªã ƒë·∫ßy ƒë·ªß
        const latestArticles = articlesData.slice(0, 6);
        setArticles(latestArticles);
      } catch (err: any) {
        console.error("üí• Error loading articles:", err.message, err);
        setArticles([]);
      } finally {
        setArticlesLoading(false);
        console.log("üèÅ Articles loading finished");
      }
    };
    fetchArticles();
  }, []);

  const stats = [
    { number: "20+", label: "NƒÉm Kinh Nghi·ªám" },
    { number: "483", label: "Kh√°ch H√†ng H√†i L√≤ng" },
    { number: "150+", label: "D·ª± √Ån Ho√†n Th√†nh" },
  ];

  // H√†m t·∫°o ref v√† controls cho t·ª´ng section
  const createSectionAnimation = () => {
    const ref = useRef(null);
    const isInView = useInView(ref, { once: true, amount: 0.2 });
    const controls = useAnimation();

    useEffect(() => {
      if (isInView) {
        controls.start("visible");
      }
    }, [isInView, controls]);

    return { ref, controls };
  };

  // T·∫°o animation variants
  const fadeUpVariants = {
    hidden: { opacity: 0, y: 50 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.8, ease: easeOut } },
  };

  const fadeRightVariants = {
    hidden: { opacity: 0, x: -50 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.8, ease: easeOut } },
  };

  const fadeLeftVariants = {
    hidden: { opacity: 0, x: 50 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.8, ease: easeOut } },
  };

  const zoomInVariants = {
    hidden: { opacity: 0, scale: 0.8 },
    visible: {
      opacity: 1,
      scale: 1,
      transition: { duration: 0.8, ease: easeOut },
    },
  };

  // T·∫°o ref v√† controls cho c√°c section
  const heroRef = createSectionAnimation();

  const searchRef = createSectionAnimation();
  const benefitsRef = createSectionAnimation();
  const cardsRef = createSectionAnimation();
  const productsRef = createSectionAnimation();
  const swiperRef = createSectionAnimation();
  const craftedRef = createSectionAnimation();
  const statsRef = createSectionAnimation();
  const reviewsRef = createSectionAnimation();
  const articlesRef = createSectionAnimation();
  const ctaRef = createSectionAnimation();

  return (
    <div>
      {/* Ph·∫ßn Hero */}
      <div className="relative mt-10 bg-gray-50 bg-cover bg-center font-sa">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
          <motion.div
            ref={heroRef.ref}
            initial="hidden"
            animate={heroRef.controls}
            variants={fadeUpVariants}
            className="flex justify-center items-start text-center relative"
          >
            <img
              src="/image/muiten.png"
              alt="M≈©i t√™n"
              className="absolute left-4 top-28 w-[120px] sm:left-10 sm:top-10 sm:w-[10px]"
            />
            <div className="flex-1">
              <h1 className="font-bold tracking-tight mb-8 text-center">
                <span className="block text-4xl md:text-5xl lg:text-6xl text-gray-900 pb-2">
                  Kh√°m Ph√° N·ªôi Th·∫•t V·ªõi
                  <br />
                  G·ªó Ch·∫•t L∆∞·ª£ng Cao
                </span>
              </h1>
              <p className="text-lg max-w-2xl mx-auto text-gray-400 mt-6">
                Ch√∫ng t√¥i mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m n·ªôi th·∫•t ch·∫•t l∆∞·ª£ng cao v·ªõi
                thi·∫øt k·∫ø tinh t·∫ø. M·ªói s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c ch·∫ø t√°c t·ªâ m·ªâ, ph√π h·ª£p
                v·ªõi m·ªçi kh√¥ng gian s·ªëng. S·ª± h√†i l√≤ng c·ªßa kh√°ch h√†ng lu√¥n l√† ∆∞u
                ti√™n h√†ng ƒë·∫ßu. H√£y kh√°m ph√° b·ªô s∆∞u t·∫≠p ƒë·ªôc ƒë√°o c·ªßa ch√∫ng t√¥i
                ngay h√¥m nay.
              </p>
            </div>
          </motion.div>
        </div>

        {/* Banner S·ª± Ki·ªán - Beautiful Event Banner with Background Image */}
        {!eventLoading && activeEvents.length > 0 && (
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-8 mb-4">
            <div className="relative rounded-2xl overflow-hidden shadow-2xl h-48 sm:h-56 md:h-64">
              {/* Background Image with Overlay */}
              <div className="absolute inset-0">
                <img
                  src={activeEvents[0]?.anh_banner || "/image/anhnen.png"}
                  alt="Event Banner"
                  className="w-full h-full object-cover"
                />
                <div className="absolute inset-0 bg-gradient-to-r from-black/70 via-black/50 to-black/30"></div>
              </div>

              {/* Content */}
              <div className="relative z-10 h-full flex flex-col justify-center px-6 sm:px-8 md:px-12">
                <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between h-full">
                  <div className="flex-1 py-6">
                    {/* Hot Badge */}
                    <div className="flex items-center gap-2 mb-3">
                      <div className="flex items-center gap-2 bg-red-500 text-white px-3 py-1 rounded-full text-xs font-bold uppercase tracking-wide">
                        <div className="w-2 h-2 bg-white rounded-full animate-pulse"></div>
                        S·ª∞ KI·ªÜN HOT
                      </div>
                      {activeEvents[0]?.ngay_ket_thuc && (
                        <div className="bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full text-xs">
                          K·∫øt th√∫c:{" "}
                          {new Date(
                            activeEvents[0].ngay_ket_thuc
                          ).toLocaleDateString("vi-VN")}
                        </div>
                      )}
                    </div>

                    {/* Title */}
                    <h3 className="text-white text-xl sm:text-2xl md:text-3xl font-bold mb-2 leading-tight">
                      {activeEvents[0]?.tieu_de ||
                        activeEvents[0]?.ten_su_kien ||
                        "Khuy·∫øn m√£i ƒë·∫∑c bi·ªát"}
                    </h3>

                    {/* Description */}
                    <p className="text-white/90 text-sm sm:text-base mb-4 max-w-lg">
                      {activeEvents[0]?.noi_dung ||
                        activeEvents[0]?.mo_ta_ngan ||
                        "∆Øu ƒë√£i h·∫•p d·∫´n d√†nh cho b·∫°n - Kh√°m ph√° ngay!"}
                    </p>

                    {/* Multiple Events Indicator */}
                    {activeEvents.length > 1 && (
                      <div className="flex items-center gap-2 text-white/80 text-xs">
                        <svg
                          className="w-4 h-4"
                          fill="currentColor"
                          viewBox="0 0 20 20"
                        >
                          <path
                            fillRule="evenodd"
                            d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
                            clipRule="evenodd"
                          />
                        </svg>
                        <span>
                          +{activeEvents.length - 1} s·ª± ki·ªán kh√°c ƒëang di·ªÖn ra
                        </span>
                      </div>
                    )}
                  </div>

                  {/* CTA Button */}
                  <div className="flex flex-col gap-3 pb-6 sm:pb-0">
                    <button
                      onClick={() => navigate("/sanpham")}
                      className="bg-gradient-to-r from-[#FFB23F] to-[#FF8C42] text-white font-bold px-6 py-3 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 text-sm sm:text-base whitespace-nowrap"
                    >
                      üéâ Kh√°m Ph√° Ngay
                    </button>
                    {activeEvents.length > 1 && (
                      <button
                        onClick={() => navigate("/sanpham")}
                        className="text-white/90 hover:text-white text-xs underline underline-offset-2 transition-colors"
                      >
                        Xem t·∫•t c·∫£ s·ª± ki·ªán ‚Üí
                      </button>
                    )}
                  </div>
                </div>
              </div>

              {/* Decorative Elements */}
              <div className="absolute top-4 right-4 opacity-30">
                <div className="w-16 h-16 border-2 border-white/30 rounded-full animate-pulse"></div>
              </div>
              <div className="absolute bottom-4 left-4 opacity-20">
                <div className="w-8 h-8 bg-white/20 rounded-full"></div>
              </div>
            </div>
          </div>
        )}

        {/* √î t√¨m ki·∫øm */}
        <motion.div
          ref={searchRef.ref}
          initial="hidden"
          animate={searchRef.controls}
          variants={fadeUpVariants}
          className="relative max-w-7xl mx-auto h-[300px] sm:h-[400px] md:h-[500px] lg:h-[600px]"
        >
          <div className="relative mx-auto w-[90%] sm:w-[95%] md:w-[600px] lg:w-[810px] h-12 sm:h-14 md:h-16 lg:h-[84px] mt-2 sm:mt-4 sm:absolute sm:top-6 md:absolute md:top-9 md:left-1/2 md:transform md:-translate-x-1/2 md:z-10">
            <div className="bg-white rounded-lg shadow-lg flex items-center px-3 sm:px-4 md:px-6 h-full">
              <SearchBox
                placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m"
                showDropdown={true}
                maxResults={5}
                className="w-full"
              />
            </div>
          </div>
          <div className="flex justify-center items-center w-full max-w-[90%] sm:max-w-[85%] md:max-w-full h-full mx-auto">
            <img
              src="/image/anhnen.png"
              alt="N·ªôi th·∫•t"
              className="w-full h-auto max-h-[70%] sm:max-h-[80%] md:max-h-[90%] object-cover"
            />
          </div>
        </motion.div>

        {/* Ph·∫ßn l·ª£i √≠ch */}
        <div className="max-w-7xl mx-auto px-6 sm:px-8 md:px-10">
          <motion.div
            ref={benefitsRef.ref}
            initial="hidden"
            animate={benefitsRef.controls}
            variants={fadeRightVariants}
            className="flex flex-col md:flex-row justify-between items-start gap-6 sm:gap-8"
          >
            <div className="w-full md:w-1/2">
              <p className="text-sm text-[#FFB23F] font-semibold mb-2">
                L·ª£i √çch
              </p>
              <h2 className="text-2xl sm:text-3xl font-bold text-[#151411] leading-snug">
                L·ª£i √≠ch khi s·ª≠ d·ª•ng <br /> d·ªãch v·ª• c·ªßa ch√∫ng t√¥i
              </h2>
            </div>
            <div className="w-full md:w-1/2 pl-0 sm:pl-6 md:pl-10 text-gray-500 text-base sm:text-lg">
              <p>
                Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn cho b·∫°n nh·ªØng s·∫£n ph·∫©m n·ªôi th·∫•t
                <br /> ch·∫•t l∆∞·ª£ng cao v·ªõi d·ªãch v·ª• t·∫≠n t√¢m v√† <br />
                gi√° c·∫£ c·∫°nh tranh nh·∫•t th·ªã tr∆∞·ªùng.
              </p>
            </div>
          </motion.div>
        </div>

        {/* Cards l·ª£i √≠ch */}
        <div className="max-w-7xl mx-auto px-6 sm:px-8 md:px-10 pt-8 sm:pt-10">
          <motion.div
            ref={cardsRef.ref}
            initial="hidden"
            animate={cardsRef.controls}
            variants={fadeUpVariants}
            className="flex flex-col md:flex-row justify-between items-start gap-6 sm:gap-8"
          >
            {[
              {
                icon: "/image/1iconcard.png",
                title: "Nhi·ªÅu L·ª±a Ch·ªçn",
                description:
                  "H√†ng ngh√¨n s·∫£n ph·∫©m n·ªôi th·∫•t ƒëa d·∫°ng t·ª´ c·ªï ƒëi·ªÉn ƒë·∫øn hi·ªán ƒë·∫°i, ph√π h·ª£p v·ªõi m·ªçi phong c√°ch v√† ng√¢n s√°ch c·ªßa b·∫°n.",
              },
              {
                icon: "/image/2iconcard.png",
                title: "Nhanh Ch√≥ng v√† ƒê√∫ng H·∫πn",
                description:
                  "D·ªãch v·ª• giao h√†ng nhanh ch√≥ng trong 24-48 gi·ªù v√† ƒë√∫ng h·∫πn cam k·∫øt, ƒë·∫£m b·∫£o s·∫£n ph·∫©m ƒë·∫øn tay b·∫°n an to√†n.",
              },
              {
                icon: "/image/3iconcard.png",
                title: "Gi√° C·∫£ H·ª£p L√Ω",
                description:
                  "Cam k·∫øt gi√° c·∫£ minh b·∫°ch v√† c·∫°nh tranh nh·∫•t th·ªã tr∆∞·ªùng, c√πng nhi·ªÅu ch∆∞∆°ng tr√¨nh ∆∞u ƒë√£i h·∫•p d·∫´n cho kh√°ch h√†ng.",
              },
            ].map((card, index) => (
              <motion.div
                key={index}
                variants={zoomInVariants}
                transition={{ delay: index * 0.2 }}
                className="w-full md:w-1/3"
              >
                <div className="bg-white shadow-md rounded-lg p-4 sm:p-6 text-start">
                  <div className="flex justify-start mb-4">
                    <div className="w-12 h-12 sm:w-14 sm:h-14 rounded-full bg-gray-100 flex items-center justify-center">
                      <img
                        src={card.icon}
                        alt={card.title}
                        className="w-8 h-8 sm:w-10 sm:h-10"
                      />
                    </div>
                  </div>
                  <h3 className="text-base sm:text-lg font-semibold text-[#151411] mb-2">
                    {card.title}
                  </h3>
                  <p className="text-base sm:text-lg text-gray-500">
                    {card.description}
                  </p>
                </div>
              </motion.div>
            ))}
          </motion.div>

          {/* Ph·∫ßn s·∫£n ph·∫©m n·ªïi b·∫≠t */}
          <motion.div
            ref={productsRef.ref}
            initial="hidden"
            animate={productsRef.controls}
            variants={fadeUpVariants}
            className="pt-10"
          >
            <div>
              <h2 className="font-bold text-[#FFB23F] text-center mb-3">
                S·∫£n Ph·∫©m
              </h2>
              <h2 className="text-3xl text-black font-bold text-center mb-5">
                S·∫£n ph·∫©m n·ªïi b·∫≠t c·ªßa ch√∫ng t√¥i
              </h2>
              <h2 className="text-center text-gray-500 text-[18px]">
                Kh√°m ph√° b·ªô s∆∞u t·∫≠p n·ªôi th·∫•t ƒë·ªôc ƒë√°o ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ l∆∞·ª°ng
                <br /> t·ª´ c√°c th∆∞∆°ng hi·ªáu uy t√≠n, mang ƒë·∫øn ch·∫•t l∆∞·ª£ng tuy·ªát v·ªùi
                cho ng√¥i nh√† b·∫°n.
              </h2>
            </div>
          </motion.div>
        </div>

        {/* SwiperContainer */}
        <motion.div
          ref={swiperRef.ref}
          initial="hidden"
          animate={swiperRef.controls}
          variants={fadeUpVariants}
          className="max-w-7xl mx-auto py-8 sm:py-10 px-4 sm:px-6 md:px-8"
        ></motion.div>

        {/* S·∫£n ph·∫©m n·ªïi b·∫≠t */}
        <motion.div
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.2 }}
          variants={fadeUpVariants}
          className="bg-gray-50 py-12"
        >
          <PopularProducts limit={8} />
        </motion.div>

        {/* G·ª£i √Ω s·∫£n ph·∫©m */}
        <motion.div
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.2 }}
          variants={fadeUpVariants}
          className="bg-white py-12"
        >
          <ProductRecommendations limit={8} />
        </motion.div>

        {/* Ph·∫ßn s·∫£n ph·∫©m c·ªßa ch√∫ng t√¥i */}
        <div className="max-w-7xl mx-auto px-6 sm:px-8 md:px-10">
          <motion.div
            ref={craftedRef.ref}
            initial="hidden"
            animate={craftedRef.controls}
            variants={fadeRightVariants}
            className="flex flex-col md:flex-row justify-between items-start gap-6 sm:gap-8"
          >
            <div className="w-full md:w-1/2">
              <p className="text-sm text-[#FFB23F] font-semibold mb-2">
                S·∫£n Ph·∫©m C·ªßa Ch√∫ng T√¥i
              </p>
              <h2 className="text-2xl sm:text-3xl font-bold text-[#151411] leading-snug">
                ƒê∆∞·ª£c ch·∫ø t√°c b·ªüi ƒë·ªôi ng≈© t√†i nƒÉng v√† <br /> v·∫≠t li·ªáu ch·∫•t l∆∞·ª£ng
                cao
              </h2>
              <p className="text-base sm:text-lg text-gray-500 mt-6 sm:mt-10">
                M·ªói s·∫£n ph·∫©m n·ªôi th·∫•t ƒë·ªÅu ƒë∆∞·ª£c ch·∫ø t√°c t·ªâ m·ªâ t·ª´ nguy√™n li·ªáu cao
                c·∫•p, k·∫øt h·ª£p thi·∫øt k·∫ø hi·ªán ƒë·∫°i v√† t√≠nh nƒÉng th·ª±c d·ª•ng ƒë·ªÉ t·∫°o n√™n
                nh·ªØng kh√¥ng gian s·ªëng ho√†n h·∫£o cho gia ƒë√¨nh b·∫°n.
              </p>
              <button
                className="bg-[#518581] text-white rounded px-4 py-2 sm:px-6 sm:py-3 mt-6 sm:mt-8 hover:bg-green-800"
                onClick={() => navigate("/about-us")}
              >
                T√¨m Hi·ªÉu Th√™m
              </button>
              <img
                src="/image/learnmore2.png"
                alt="Tr∆∞ng b√†y s·∫£n ph·∫©m"
                className="mt-6 sm:mt-8 w-full max-w-[595px] h-auto rounded-lg"
              />
            </div>
            <motion.div
              ref={statsRef.ref}
              initial="hidden"
              animate={statsRef.controls}
              variants={fadeLeftVariants}
              className="w-full md:w-1/2 flex flex-col items-center text-gray-500 text-base sm:text-lg"
            >
              <div className="flex flex-row sm:flex-row gap-6 sm:gap-10 justify-center w-full mt-6 sm:mt-0">
                {stats.map((stat, index) => (
                  <motion.div
                    key={index}
                    variants={fadeUpVariants}
                    transition={{ delay: index * 0.2 }}
                    className="text-center"
                  >
                    <div className="text-3xl sm:text-4xl font-bold text-black">
                      {stat.number}
                    </div>
                    <div className="text-gray-400 text-sm mt-1">
                      {stat.label}
                    </div>
                  </motion.div>
                ))}
              </div>
              <img
                src="/image/learnmore1.jpg"
                alt="Tr∆∞ng b√†y s·∫£n ph·∫©m"
                className="mt-6 w-full h-auto max-h-[400px] object-cover rounded-lg"
              />
            </motion.div>
          </motion.div>
        </div>

        {/* Ph·∫ßn ƒë√°nh gi√° (marquee) */}
        <motion.div
          ref={reviewsRef.ref}
          initial="hidden"
          animate={reviewsRef.controls}
          variants={fadeUpVariants}
          className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 pt-8 sm:pt-10 md:pt-12"
        >
          <div className="relative overflow-x-hidden">
            <div className="flex gap-4 sm:gap-8 py-6 sm:py-8 animate-marquee whitespace-nowrap">
              {Array(5)
                .fill(0)
                .map((_, index) => (
                  <motion.div
                    key={index}
                    variants={fadeUpVariants}
                    transition={{ delay: index * 0.2 }}
                    className="inline-block w-full sm:w-80 md:w-96 min-w-[280px] sm:min-w-[320px] mx-2 sm:mx-4"
                  >
                    <div className="bg-white shadow-md rounded-lg p-4 sm:p-6">
                      <div className="mb-4">
                        <svg
                          width="32"
                          height="32"
                          className="sm:w-[40px] sm:h-[40px]"
                          fill="none"
                          viewBox="0 0 40 40"
                        >
                          <text x="0" y="32" fontSize="40" fill="#6EE7B7">
                            ‚Äú
                          </text>
                        </svg>
                      </div>
                      <p className="text-base sm:text-lg break-words max-w-xs text-gray-500 mb-6 sm:mb-8 whitespace-normal">
                        S·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao, d·ªãch v·ª• t·∫≠n t√¢m v√† gi√° c·∫£ h·ª£p
                        l√Ω. T√¥i r·∫•t h√†i l√≤ng v·ªõi tr·∫£i nghi·ªám mua s·∫Øm t·∫°i ƒë√¢y.
                      </p>
                      <div className="flex items-center justify-between">
                        <div className="flex items-center gap-2">
                          <img
                            src="/image/human1.png"
                            alt="Janne Cooper"
                            className="w-8 h-8 sm:w-10 sm:h-10 rounded-full object-cover"
                          />
                          <span className="font-semibold text-[#151411]">
                            Janne Cooper
                          </span>
                        </div>
                        <div className="flex items-center gap-1">
                          <span className="font-bold text-gray-700">4.3</span>
                        </div>
                      </div>
                    </div>
                  </motion.div>
                ))}
            </div>
          </div>
        </motion.div>

        {/* Ph·∫ßn b√†i vi·∫øt */}
        <motion.div
          ref={articlesRef.ref}
          initial="hidden"
          animate={articlesRef.controls}
          variants={fadeUpVariants}
          className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8 pt-8 sm:pt-10 md:pt-12"
        >
          {/* Header */}
          <div className="text-center mb-8 sm:mb-12">
            <p className="text-xs sm:text-sm text-[#FFB23F] font-semibold mb-2">
              B√†i Vi·∫øt
            </p>
            <h2 className="text-2xl sm:text-3xl font-bold text-[#151411] leading-snug mb-4">
              N·ªôi th·∫•t t·ªët nh·∫•t ƒë·∫øn t·ª´ <br /> N·ªôi th·∫•t VN
            </h2>
            <p className="text-base sm:text-lg text-gray-500 max-w-2xl mx-auto">
              Kh√°m ph√° nh·ªØng b√†i vi·∫øt m·ªõi nh·∫•t v·ªÅ trang tr√≠ n·ªôi th·∫•t, m·∫πo v·∫∑t v√†
              c·∫£m h·ª©ng thi·∫øt k·∫ø.
            </p>
          </div>

          {/* Articles Grid - 2 c·ªôt c√¢n b·∫±ng */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12">
            {/* C·ªôt tr√°i - 3 b√†i vi·∫øt */}
            <div className="flex flex-col gap-6">
              {!articlesLoading && articles.length > 0 ? (
                articles.slice(0, 3).map((article, index) => (
                  <div
                    key={article.id}
                    className={`cursor-pointer group transition-all duration-300 ${
                      index === 0 ? "transform hover:scale-[1.02]" : ""
                    }`}
                    onClick={() => navigate(`/baibao/${article.id}`)}
                  >
                    {index === 0 ? (
                      // B√†i vi·∫øt ƒë·∫ßu ti·∫øp l·ªõn h∆°n
                      <div className="relative rounded-lg overflow-hidden shadow-lg">
                        <img
                          src={article.anh_dai_dien || "/image/hetcuu.png"}
                          alt={article.tieu_de}
                          className="w-full h-[250px] sm:h-[300px] object-cover group-hover:scale-105 transition-transform duration-300"
                        />
                        <div className="absolute inset-x-0 bottom-0 h-2/3 bg-gradient-to-t from-black/80 via-black/40 to-transparent" />
                        <div className="absolute bottom-0 p-4 sm:p-6 text-white">
                          <p className="text-xs sm:text-sm opacity-70 mb-1">
                            {article.danh_muc?.ten_danh_muc || "B√†i vi·∫øt"}
                          </p>
                          <h3 className="text-lg sm:text-xl font-bold mb-2 line-clamp-2">
                            {article.tieu_de}
                          </h3>
                          <p className="text-sm opacity-80 line-clamp-2 mb-3">
                            {article.mo_ta_ngan ||
                              "Kh√°m ph√° th√™m v·ªÅ n·ªôi th·∫•t..."}
                          </p>
                          <div className="flex items-center gap-2 text-xs">
                            <span>
                              {new Date(
                                article.ngay_tao || ""
                              ).toLocaleDateString("vi-VN")}
                            </span>
                            <span>‚Ä¢</span>
                            <span>{article.luot_xem} l∆∞·ª£t xem</span>
                          </div>
                        </div>
                      </div>
                    ) : (
                      // B√†i vi·∫øt nh·ªè h∆°n
                      <div className="flex gap-4 items-start hover:bg-white hover:shadow-sm rounded-lg p-3 transition-all">
                        <img
                          src={article.anh_dai_dien || "/image/hetcuu2.png"}
                          alt={article.tieu_de}
                          className="w-24 sm:w-32 h-20 sm:h-24 object-cover rounded group-hover:scale-105 transition-transform duration-300 flex-shrink-0"
                        />
                        <div className="flex-1">
                          <p className="text-xs text-gray-400">
                            {article.danh_muc?.ten_danh_muc || "B√†i vi·∫øt"}
                          </p>
                          <h3 className="text-sm sm:text-base font-semibold text-[#151411] mt-1 line-clamp-2 group-hover:text-[#518581] transition-colors">
                            {article.tieu_de}
                          </h3>
                          <p className="text-xs text-gray-500 mt-1 line-clamp-2">
                            {article.mo_ta_ngan ||
                              "Nh·ªØng m·∫πo hay ƒë·ªÉ t·ªëi ∆∞u h√≥a kh√¥ng gian s·ªëng..."}
                          </p>
                          <div className="flex items-center gap-2 mt-2 text-xs text-gray-400">
                            <span className="font-semibold text-[#151411]">
                              {new Date(
                                article.ngay_tao || ""
                              ).toLocaleDateString("vi-VN")}
                            </span>
                            <span>‚Ä¢</span>
                            <span>{article.luot_xem} l∆∞·ª£t xem</span>
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                ))
              ) : articlesLoading ? (
                // Loading skeleton cho c·ªôt tr√°i
                <>
                  <div className="relative rounded-lg overflow-hidden shadow-lg bg-gray-200 animate-pulse h-[300px]">
                    <div className="absolute bottom-0 p-4 sm:p-6">
                      <div className="h-3 bg-gray-300 rounded mb-2 w-20"></div>
                      <div className="h-5 bg-gray-300 rounded mb-2 w-3/4"></div>
                      <div className="h-3 bg-gray-300 rounded w-full"></div>
                    </div>
                  </div>
                  {Array(2)
                    .fill(0)
                    .map((_, idx) => (
                      <div
                        key={idx}
                        className="flex gap-4 items-start animate-pulse"
                      >
                        <div className="w-24 sm:w-32 h-20 sm:h-24 bg-gray-200 rounded flex-shrink-0"></div>
                        <div className="flex-1">
                          <div className="h-3 bg-gray-200 rounded mb-2 w-16"></div>
                          <div className="h-4 bg-gray-200 rounded mb-2 w-3/4"></div>
                          <div className="h-3 bg-gray-200 rounded mb-2 w-full"></div>
                          <div className="h-3 bg-gray-200 rounded w-1/2"></div>
                        </div>
                      </div>
                    ))}
                </>
              ) : (
                <div className="text-center py-8 text-gray-500">
                  Kh√¥ng c√≥ b√†i vi·∫øt n√†o ƒë·ªÉ hi·ªÉn th·ªã
                </div>
              )}
            </div>

            {/* C·ªôt ph·∫£i - 3 b√†i vi·∫øt */}
            <div className="flex flex-col gap-6">
              {!articlesLoading && articles.length > 3 ? (
                articles.slice(3, 6).map((article, index) => (
                  <div
                    key={article.id}
                    className={`cursor-pointer group transition-all duration-300 ${
                      index === 0 ? "transform hover:scale-[1.02]" : ""
                    }`}
                    onClick={() => navigate(`/baibao/${article.id}`)}
                  >
                    {index === 0 ? (
                      // B√†i vi·∫øt ƒë·∫ßu ti√™n l·ªõn h∆°n
                      <div className="relative rounded-lg overflow-hidden shadow-lg">
                        <img
                          src={article.anh_dai_dien || "/image/hetcuu3.png"}
                          alt={article.tieu_de}
                          className="w-full h-[250px] sm:h-[300px] object-cover group-hover:scale-105 transition-transform duration-300"
                        />
                        <div className="absolute inset-x-0 bottom-0 h-2/3 bg-gradient-to-t from-black/80 via-black/40 to-transparent" />
                        <div className="absolute bottom-0 p-4 sm:p-6 text-white">
                          <p className="text-xs sm:text-sm opacity-70 mb-1">
                            {article.danh_muc?.ten_danh_muc || "B√†i vi·∫øt"}
                          </p>
                          <h3 className="text-lg sm:text-xl font-bold mb-2 line-clamp-2">
                            {article.tieu_de}
                          </h3>
                          <p className="text-sm opacity-80 line-clamp-2 mb-3">
                            {article.mo_ta_ngan ||
                              "Kh√°m ph√° th√™m v·ªÅ n·ªôi th·∫•t..."}
                          </p>
                          <div className="flex items-center gap-2 text-xs">
                            <span>
                              {new Date(
                                article.ngay_tao || ""
                              ).toLocaleDateString("vi-VN")}
                            </span>
                            <span>‚Ä¢</span>
                            <span>{article.luot_xem} l∆∞·ª£t xem</span>
                          </div>
                        </div>
                      </div>
                    ) : (
                      // B√†i vi·∫øt nh·ªè h∆°n
                      <div className="flex gap-4 items-start hover:bg-white hover:shadow-sm rounded-lg p-3 transition-all">
                        <img
                          src={article.anh_dai_dien || "/image/hetcuu4.png"}
                          alt={article.tieu_de}
                          className="w-24 sm:w-32 h-20 sm:h-24 object-cover rounded group-hover:scale-105 transition-transform duration-300 flex-shrink-0"
                        />
                        <div className="flex-1">
                          <p className="text-xs text-gray-400">
                            {article.danh_muc?.ten_danh_muc || "B√†i vi·∫øt"}
                          </p>
                          <h3 className="text-sm sm:text-base font-semibold text-[#151411] mt-1 line-clamp-2 group-hover:text-[#518581] transition-colors">
                            {article.tieu_de}
                          </h3>
                          <p className="text-xs text-gray-500 mt-1 line-clamp-2">
                            {article.mo_ta_ngan ||
                              "Nh·ªØng m·∫πo hay ƒë·ªÉ t·ªëi ∆∞u h√≥a kh√¥ng gian s·ªëng..."}
                          </p>
                          <div className="flex items-center gap-2 mt-2 text-xs text-gray-400">
                            <span className="font-semibold text-[#151411]">
                              {new Date(
                                article.ngay_tao || ""
                              ).toLocaleDateString("vi-VN")}
                            </span>
                            <span>‚Ä¢</span>
                            <span>{article.luot_xem} l∆∞·ª£t xem</span>
                            {article.tags && article.tags.length > 0 && (
                              <>
                                <span>‚Ä¢</span>
                                <span className="text-[#FFB23F]">
                                  #{article.tags[0].ten_tag}
                                </span>
                              </>
                            )}
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                ))
              ) : articlesLoading ? (
                // Loading skeleton cho c·ªôt ph·∫£i
                <>
                  <div className="relative rounded-lg overflow-hidden shadow-lg bg-gray-200 animate-pulse h-[300px]">
                    <div className="absolute bottom-0 p-4 sm:p-6">
                      <div className="h-3 bg-gray-300 rounded mb-2 w-20"></div>
                      <div className="h-5 bg-gray-300 rounded mb-2 w-3/4"></div>
                      <div className="h-3 bg-gray-300 rounded w-full"></div>
                    </div>
                  </div>
                  {Array(2)
                    .fill(0)
                    .map((_, idx) => (
                      <div
                        key={idx}
                        className="flex gap-4 items-start animate-pulse"
                      >
                        <div className="w-24 sm:w-32 h-20 sm:h-24 bg-gray-200 rounded flex-shrink-0"></div>
                        <div className="flex-1">
                          <div className="h-3 bg-gray-200 rounded mb-2 w-16"></div>
                          <div className="h-4 bg-gray-200 rounded mb-2 w-3/4"></div>
                          <div className="h-3 bg-gray-200 rounded mb-2 w-full"></div>
                          <div className="h-3 bg-gray-200 rounded w-1/2"></div>
                        </div>
                      </div>
                    ))}
                </>
              ) : articles.length > 0 && articles.length <= 3 ? (
                <div className="text-center py-8 text-gray-500 border-2 border-dashed border-gray-300 rounded-lg">
                  <p className="text-sm">C·∫ßn th√™m b√†i vi·∫øt ƒë·ªÉ hi·ªÉn th·ªã</p>
                  <p className="text-xs mt-1 opacity-70">
                    Hi·ªán c√≥: {articles.length} b√†i vi·∫øt
                  </p>
                </div>
              ) : null}
            </div>
          </div>

          {/* View all articles button */}
          <div className="text-center mt-8 sm:mt-12">
            <button
              onClick={() => navigate("/baibao")}
              className="bg-[#518581] text-white px-8 py-4 rounded-lg hover:bg-[#406b67] text-base font-medium shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
            >
              Xem t·∫•t c·∫£ b√†i vi·∫øt ‚Üí
            </button>
          </div>
        </motion.div>
      </div>

      {/* Call to action */}
      <motion.div
        ref={ctaRef.ref}
        initial="hidden"
        animate={ctaRef.controls}
        variants={fadeUpVariants}
        className="mt-8 sm:mt-10 md:mt-12"
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
          <div className="flex flex-col sm:flex-row items-center justify-between text-center gap-4 sm:gap-6">
            <p className="text-xl sm:text-2xl md:text-3xl font-medium text-gray-800">
              Tham gia ngay ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát
            </p>
            <button className="bg-teal-600 text-white text-xs sm:text-sm px-3 py-2 sm:px-4 sm:py-2 rounded hover:bg-teal-700 transition">
              T√¨m hi·ªÉu th√™m
            </button>
          </div>
        </div>
      </motion.div>
    </div>
  );
};

export default TrangChu;
